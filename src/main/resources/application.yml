server:
  port: "${APP_SERVER_PORT:8080}"
  secret-key: "${DEMO_SERVICE_REST_PERMISSION_SECRET_KEY:hireBenDemoSecretKey}"
  error:
    whitelabel:
      enabled: false

spring:
  application:
    name: "${DEMO_SERVICE_REST_PERMISSION_ID:REST_PERMISSION}"
  profiles:
    active: "${DEMO_SERVICE_ENVIRONMENT:dev}"
  threads:
    virtual:
      enabled: true
  sql:
    init:
      mode: "never"
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: "validate"
  datasource:
    url: "jdbc:postgresql://${DEMO_DATABASE_POSTGRES_HOST:127.0.0.1}:${DEMO_DATABASE_POSTGRES_PORT:5432}/${DEMO_DATABASE_POSTGRES_DB:hireben-db}"
    driver-class-name: "org.postgresql.Driver"
    username: "${DEMO_DATABASE_POSTGRES_USER:hirebenDemoDbUser}"
    password: "${DEMO_DATABASE_POSTGRES_PASSWORD:hireBenDemoDbPassword}"
    hikari:
      minimum-idle: "${APP_DATABASE_POOL_CONN_MIN:1}"
      maximum-pool-size: "${APP_DATABASE_POOL_CONN_MAX:5}"
      idle-timeout: 30000
      connection-timeout: 30000
      max-lifetime: 2000000
      pool-name: "REST_PERMISSION_HikariCP"

logging:
  level:
    root: "info"
  include-application-name: true
  include-application-group: true

management:
  endpoints:
    jmx:
      exposure:
        exclude: "*"
    web:
      exposure:
        include: "*"
    access:
      default: "NONE"
  endpoint:
    health:
      access: "READ_ONLY"
      cache:
        time-to-live: "5s"
  info:
    java:
      enabled: true
    env:
      enabled: true

info:
  app:
    service-id: "${DEMO_SERVICE_REST_PERMISSION_ID:REST_PERMISSION}"

---
# Environment: dev
spring:
  config:
    activate:
      on-profile: "dev"

  jpa:
    show-sql: "${APP_DATABASE_SHOW_SQL:false}"

info:
  app:
    environment: "dev"

management:
  endpoint:
    info:
      access: "READ_ONLY"

---
# Environment: staging
spring:
  config:
    activate:
      on-profile: "staging"

info:
  app:
    environment: "staging"

---
# Environment: prod
spring:
  config:
    activate:
      on-profile: "prod"

info:
  app:
    environment: "prod"

